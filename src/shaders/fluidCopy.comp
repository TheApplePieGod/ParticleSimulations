#version 450

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

struct cell
{
    int type;
    float mass;
};

layout(push_constant) uniform PushConstants {
    int numCells;
    int mapWidth;
    int mapHeight;
    int iterations;
    float diffusion;
    float viscosity;
    float deltaTime;
    bool dirty;
} constants;

layout(set = 0, binding = 0, std430) buffer CellData
{
    cell cells[];
} data;

layout(set = 0, binding = 1, std430) buffer TempData
{
    cell cells[];
} tempData;

layout(set = 0, binding = 2, rgba32f) uniform image2D image;

uint ID(uint x, uint y)
{
    return y * constants.mapWidth + x;
}

void main()
{
    uint id = ID(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    if (id >= constants.numCells) return;

    data.cells[id] = tempData.cells[id];

    float mass = tempData.cells[id].mass;
    imageStore(image, ivec2(gl_GlobalInvocationID.xy), vec4(mass, mass, mass, 1.0));
}